Section 4: Advanced Component Types - Dynamic Components, Polymorphic Components & More


45. Module Introduction

46. Building a More Dynamic & Flexible Component
-kreiramo komponentu InfoBox.tsx
-u komponentu InfoBox.tsx importujemo tip type ReactNode
-kreiramo tip type InfoBoxProps
-funkciji InfoBox() dodajemo parametre destruktuirane props mode, children
-parametrima mode, children dodajemo tip InfoBoxProps
-u funkciji InfoBox() dodajemo uslov if (mode === 'hint') 
-u return izjavi dodajemo ternarni uslov {mode === 'warning' ? ... : ...}
-u komponentu CourseGoalList.tsx importujemo komponentu InfoBox.tsx
-u funkciji CourseGoalList() dodajemo uslov if (goals?.length === 0)
-kreiramo varijablu let warningBox
-dodajemo uslov if (goals.length >= 4) 
-u uslov if deklarisemo varijablu warningBox
-u return izjavu dodajemo varijablu warningBox

47. Problem: Flexible Components With Required Prop Combinations
-u komponenti InfoBox.tsx u tip type InfoBoxProps dodajemo prop severity
-u return izjavi HTML elementu aside dodajemo dinamicku klasu severity
-u komponenti CourseGoalList.tsx, u return izjavi komponenti InfoBox dodajemo prop severity

48. Solution: Building Components with Discriminated Unions
-u komponenti InfoBox.tsx kreiramo tip type HintBoxProps
-kreiramo tip type WarningBoxProps
-u tip type InfoBoxProps dodajemo dva tipa HintBoxProps i WarningBoxProps
